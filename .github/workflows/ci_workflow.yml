### A CI workflow template that runs linting and python testing
### TODO: Modify as needed or as desired.

name: Test tap-prefect

on: [push]

jobs:
  # linting:
  #   runs-on: ubuntu-latest
  #   strategy:
  #     matrix:
  #       # Only lint using the primary version used for dev
  #       python-version: [3.9]

  #   steps:
  #     - uses: actions/checkout@v2
  #     - name: Set up Python ${{ matrix.python-version }}
  #       uses: actions/setup-python@v2
  #       with:
  #         python-version: ${{ matrix.python-version }}
  #     - name: Install Poetry
  #       run: |
  #         python -m pip install --upgrade pip
  #         pip install poetry==1.2.*
  #     - name: Install dependencies
  #       run: |
  #         poetry install
  #     - name: Run lint command from tox.ini
  #       run: |
  #         poetry run tox -e lint

  pytest:
    runs-on: ubuntu-latest
    env:
      GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
    strategy:
      matrix:
        python-version: [3.9]

    steps:
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install Poetry
        run: |
          python -m pip install --upgrade pip
          pip install poetry==1.2.*
      - name: Install dependencies
        run: |
          poetry install
      - name: Test with pytest
        run: |
          poetry run pytest --capture=no

  Release:
    needs: pytest
    # https://github.community/t/how-do-i-specify-job-dependency-running-in-another-workflow/16482
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    concurrency: release
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Python Semantic Release
        uses: relekang/python-semantic-release@master
        with:
          # a special token in github at the organization account level
          github_token: ${{ secrets.GITHUB_TOKEN }}
          # first must use the Datateer account token, then after first publish can generate a repo-specific token
          pypi_token: ${{ secrets.PYPI_TOKEN }}
